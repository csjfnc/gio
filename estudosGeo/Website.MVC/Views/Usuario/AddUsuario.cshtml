@model Website.MVC.Models.UsuarioViewModel

@{
    ViewBag.Title = "Novo Usuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section css{ @Styles.Render("~/Content/Pace") }

@Html.AntiForgeryToken()

<div class="container">
    <nav>
        <ul class="pager">
            <li class="previous"><a href="@Url.Action("Index", "Usuario")"><span aria-hidden="true"></span>Lista de Usuários</a></li>
        </ul>
    </nav>
    @Html.ValidationSummary(true)
    @if (!ViewData.ModelState.IsValid)
            {
        <div class="alert alert-danger">
            <a class="close" data-dismiss="alert">×</a>
            @Html.ValidationSummary()
        </div>
    }
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h3 class="panel-title text-center"><span class="glyphicon glyphicon-user"></span> Adicionar Usuário</h3>
        </div>
        <div class="panel-body">
            @using (Html.BeginForm())
            {
                <div class="col-md-6">
                    <div class="input-group  margin-top-forms">
                        <span class="input-group-addon">Nome</span>
                        @Html.EditorFor(m => m.NomeUser, new { htmlAttributes = new { required = "required", @class = "form-control", maxlength = 50 } })
                    </div>
                    <div class="input-group  margin-top-forms">
                        <span class="input-group-addon">Login</span>
                        @Html.EditorFor(m => m.LoginUser, new { htmlAttributes = new { required = "required", @class = "form-control", maxlength = 20 } })
                    </div>
                    <div class="input-group margin-top-forms">
                        <span class="input-group-addon">Senha</span>
                        @Html.PasswordFor(m => m.Senha, new { required = "required", @class = "form-control", pattern = ".{6,20}" , title = "A senha deve ter de 6 entre 20 caracteres." , @placeholder = "Senha deve ter no mínimo 6 caracteres." })
                    </div>
                    <div class="margin-top-forms margin-bottom-forms">
                        <button type="submit" value="Confirmar" class="btn btn-success btn-block"><span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Confirmar</button>
                        <a href="@Url.Action("Index")" class="btn btn-danger btn-block">
                            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                            Cancelar
                        </a>
                    </div>
                </div>

                <div class="col-md-3">
                    <h4 class="text-danger">Módulos</h4>
                    @{
                        for (int i = 0; i < Model.CheckBoxModulos.Count; i++)
                        {
                            <div class="input-group margin-top-forms">
                                @Html.HiddenFor(m => Model.CheckBoxModulos[i].Id)
                                @Html.CheckBoxFor(it => Model.CheckBoxModulos[i].Checked)
                                @Html.DisplayFor(m => Model.CheckBoxModulos[i].Name)                                
                            </div>
                        }
                    }
                </div>

                <div class="col-md-3">
                    <h4 class="text-danger">Permissões</h4>
                    @{
                        for (int i = 0; i < Model.CheckBoxPermissoes.Count; i++)
                        {
                            <div class="input-group margin-top-forms">
                                @Html.CheckBoxFor(it => Model.CheckBoxPermissoes[i].Checked)
                                @Html.HiddenFor(m => Model.CheckBoxPermissoes[i].Id)
                                @Html.DisplayFor(m => Model.CheckBoxPermissoes[i].Name)                                
                            </div>
                        }
                    }
                </div>                
            }
        </div>
    </div>
</div>
